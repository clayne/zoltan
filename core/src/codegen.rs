use std::io::Write;

use crate::error::Result;
use crate::symbols::FunctionSymbol;

const HEADER: &str = "\
// This file has been generated by zoltan (https://github.com/jac3km4/zoltan)
";

pub fn write_c_header<W: Write>(mut output: W, symbols: &[FunctionSymbol]) -> Result<()> {
    writeln!(output, "{}", HEADER)?;
    for symbol in symbols {
        writeln!(
            output,
            "#define {}_ADDR 0x{:X}",
            symbol.name().to_uppercase(),
            symbol.rva()
        )?;
    }

    Ok(())
}

pub fn write_rust_header<W: Write>(mut output: W, symbols: &[FunctionSymbol]) -> Result<()> {
    writeln!(output, "{}", HEADER)?;
    for symbol in symbols {
        writeln!(
            output,
            "const {}_ADDR: usize = 0x{:X};",
            symbol.name().to_uppercase(),
            symbol.rva()
        )?;
    }

    Ok(())
}
